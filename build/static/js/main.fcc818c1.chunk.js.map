{"version":3,"sources":["components/AddPerson.js","components/Search.js","services/contacts.js","components/Person.js","components/Contacts.js","components/Notification.js","App.js","reportWebVitals.js","index.js"],"names":["AddPerson","addPerson","handleNameChange","handleNumberChange","newName","newNumber","onSubmit","onChange","value","type","Search","searchVal","handleFilterChange","baseUrl","restRotues","getAll","axios","get","then","response","data","catch","err","alert","create","newObj","post","update","id","put","deleteContact","delete","Person","person","renderContacts","name","number","onClick","window","confirm","contacts","Contacts","filteredPeople","map","Notification","message","typeOfClass","className","App","useState","persons","setPersons","setNewName","setNewNumber","setSearchVal","successMessage","setSuccessMessage","errorMessage","setErrorMessage","res","useEffect","filter","toLowerCase","trim","includes","createNewContact","obj","concat","setTimeout","error","event","target","preventDefault","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mNAiBeA,EAfG,SAAC,GAA6E,IAA3EC,EAA0E,EAA1EA,UAAWC,EAA+D,EAA/DA,iBAAkBC,EAA6C,EAA7CA,mBAAoBC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,UAC3E,OAAO,uBAAMC,SAAUL,EAAhB,UACH,2CACA,yCACU,uBAAOM,SAAUL,EAAkBM,MAAOJ,OAEpD,2CACY,uBAAOG,SAAUJ,EAAoBK,MAAOH,OAExD,8BACI,wBAAQI,KAAK,SAAb,uBCHGC,EAPA,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,UAAWC,EAAyB,EAAzBA,mBACzB,OAAQ,oDAEJ,uBAAOL,SAAUK,EAAoBJ,MAAOG,Q,gBCJ9CE,EAAU,eA8BDC,EAFI,CAAEC,OA1BN,WACX,OAAOC,IACFC,IAAIJ,GACJK,MAAK,SAAAC,GAAQ,OAAIA,EAASC,QAC1BC,OAAM,SAAAC,GACHC,MAAM,0CAA2CD,OAqBhCE,OAjBd,SAAAC,GACX,OAAOT,IACFU,KAAKb,EAASY,GACdP,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAcEO,OAXtB,SAACC,EAAIH,GAChB,OAAOT,IACFa,IADE,UACKhB,EADL,YACgBe,GAAMH,GACxBP,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQUU,cALvB,SAAAF,GAClB,OAAOZ,IAAMe,OAAN,UAAgBlB,EAAhB,YAA2Be,IAC7BV,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UCLpBY,EARA,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,eAAX,OACX,mCACI,gCAAMD,EAAOE,KAAb,IAAoBF,EAAOG,OACvB,wBAAQC,QAAS,kBAbP,SAACJ,EAAQC,GACvBI,OAAOC,QAAP,iBAAyBN,EAAOE,KAAhC,OACAK,EAASV,cAAcG,EAAOL,IACzBV,KAAKgB,GACLb,OAAM,SAAAC,GACHC,MAAM,0CAA2CD,MAQ9BQ,CAAcG,EAAQC,IAA7C,0BCTGO,EAJE,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,eAAgBR,EAAqB,EAArBA,eAChC,OAAOQ,EAAeC,KAAI,SAAAV,GAAM,OAAI,cAAC,EAAD,CAAQC,eAAgBA,EAAgCD,OAAQA,GAAnBA,EAAOL,QCW7EgB,G,MAZM,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,YAC7B,OAAgB,OAAZD,EACO,KAIP,qBAAKE,UAAWD,EAAhB,SACKD,MCwFEG,EA3FH,WAAO,IAAD,EACgBC,mBAAS,IADzB,mBACPC,EADO,KACEC,EADF,OAEgBF,mBAAS,IAFzB,mBAEP7C,EAFO,KAEEgD,EAFF,OAGoBH,mBAAS,IAH7B,mBAGP5C,EAHO,KAGIgD,EAHJ,OAIoBJ,mBAAS,IAJ7B,mBAIPtC,EAJO,KAII2C,EAJJ,OAK8BL,mBAAS,IALvC,mBAKPM,EALO,KAKSC,EALT,OAM0BP,mBAAS,IANnC,mBAMPQ,EANO,KAMOC,EANP,KAQRxB,EAAiB,WACnBM,EAASzB,SAASG,MAAK,SAAAyC,GAAG,OAAIR,EAAWQ,OAG7CC,oBAAU1B,EAAgB,IAG1B,IAAMQ,EAAiBQ,EAAQW,QAAO,SAAA5B,GAAM,oBACxCA,QADwC,IACxCA,GADwC,UACxCA,EAAQE,YADgC,aACxC,EAAc2B,cAAcC,OAAOC,SAASrD,EAAUmD,cAAcC,WAgClEE,EAAmB,SAAAC,GACrB1B,EAAShB,OAAO0C,GACXhD,MAAK,SAAAC,GAAQ,OAAIgC,EAAWD,EAAQiB,OAAOhD,OAC3CD,MACG,WACIsC,EAAkBpD,EAAU,WAC5BgE,YAAW,WACPZ,EAAkB,MACnB,QAETnC,OAAM,SAAAC,GACJoC,EAAgBpC,EAAIH,SAASC,KAAKiD,OAClCD,YAAW,WACPV,EAAgB,MACjB,SAgBf,OACI,gCACI,2CACCH,GAAkB,cAAC,EAAD,CAAcV,QAASU,EAAgBT,YAAa,YACtEW,GAAgB,cAAC,EAAD,CAAcZ,QAASY,EAAcX,YAAa,UACnE,cAAC,EAAD,CAAQnC,UAAWA,EAAWC,mBAvCX,SAAA0D,GACvBhB,EAAagB,EAAMC,OAAO/D,UAuCtB,cAAC,EAAD,CAAWP,UAjED,SAAAqE,GACdA,EAAME,iBAWNP,EADmB,CAAE9B,KAAM/B,EAASgC,OAAQ/B,IAE5C+C,EAAW,IACXC,EAAa,KAmDwBnD,iBAhDhB,SAAAoE,GACrBlB,EAAWkB,EAAMC,OAAO/D,QA+CiDL,mBA5ClD,SAAAmE,GACvBjB,EAAaiB,EAAMC,OAAO/D,QA2CuFJ,QAASA,EAASC,UAAWA,IAC1I,yCACA,cAAC,EAAD,CAAU6B,eAAgBA,EAAgBQ,eAAgBA,QCjFvD+B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBzD,MAAK,YAAkD,IAA/C0D,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.fcc818c1.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst AddPerson = ({ addPerson, handleNameChange, handleNumberChange, newName, newNumber }) => {\r\n    return <form onSubmit={addPerson}>\r\n        <h2>add a new</h2>\r\n        <div>\r\n            name: <input onChange={handleNameChange} value={newName} />\r\n        </div>\r\n        <div>\r\n            number: <input onChange={handleNumberChange} value={newNumber} />\r\n        </div>\r\n        <div>\r\n            <button type=\"submit\">add</button>\r\n        </div>\r\n    </form>;\r\n};\r\n\r\nexport default AddPerson;","import React from 'react';\r\n\r\nconst Search = ({ searchVal, handleFilterChange }) => {\r\n    return (<div>\r\n        filter shown with\r\n        <input onChange={handleFilterChange} value={searchVal} />\r\n    </div>);\r\n};\r\n\r\nexport default Search;","import axios from 'axios';\r\nconst baseUrl = '/api/persons';\r\n\r\nconst getAll = () => {\r\n    return axios\r\n        .get(baseUrl)\r\n        .then(response => response.data)\r\n        .catch(err => {\r\n            alert(\"There was a server error. Please retry.\", err);\r\n        });\r\n};\r\n\r\nconst create = newObj => {\r\n    return axios\r\n        .post(baseUrl, newObj)\r\n        .then(response => response.data);\r\n};\r\n\r\nconst update = (id, newObj) => {\r\n    return axios\r\n        .put(`${baseUrl}/${id}`, newObj)\r\n        .then(response => response.data);\r\n};\r\n\r\nconst deleteContact = id => {\r\n    return axios.delete(`${baseUrl}/${id}`)\r\n        .then(response => response.data);\r\n};\r\n\r\nconst restRotues = { getAll, create, update, deleteContact };\r\n\r\nexport default restRotues;","import React from 'react';\r\nimport contacts from \"../services/contacts\";\r\n\r\nconst deleteContact = (person, renderContacts) => {\r\n    if (window.confirm(`Delete ${person.name}?`)) {\r\n        contacts.deleteContact(person.id)\r\n            .then(renderContacts)\r\n            .catch(err => {\r\n                alert(\"There was a server error. Please retry.\", err);\r\n            });\r\n    }\r\n};\r\n\r\nconst Person = ({ person, renderContacts }) => (\r\n    <>\r\n        <div>{person.name} {person.number}\r\n            <button onClick={() => deleteContact(person, renderContacts)}>delete</button>\r\n        </div>\r\n    </>\r\n);\r\n\r\nexport default Person;","import React from 'react';\r\nimport Person from \"./Person\";\r\n\r\nconst Contacts = ({ filteredPeople, renderContacts }) => {\r\n    return filteredPeople.map(person => <Person renderContacts={renderContacts} key={person.id} person={person} />);\r\n};\r\n\r\nexport default Contacts;","import React from 'react';\r\nimport '../App.css';\r\n\r\nconst Notification = ({ message, typeOfClass }) => {\r\n    if (message === null) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div className={typeOfClass}>\r\n            {message}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Notification;","import React, { useState, useEffect } from 'react';\r\nimport AddPerson from \"./components/AddPerson\";\r\nimport Search from \"./components/Search\";\r\nimport Contacts from \"./components/Contacts\";\r\nimport contacts from \"./services/contacts\";\r\nimport Notification from \"./components/Notification\";\r\n\r\nconst App = () => {\r\n    const [persons, setPersons] = useState([]);\r\n    const [newName, setNewName] = useState('');\r\n    const [newNumber, setNewNumber] = useState('');\r\n    const [searchVal, setSearchVal] = useState('');\r\n    const [successMessage, setSuccessMessage] = useState('');\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n\r\n    const renderContacts = () => {\r\n        contacts.getAll().then(res => setPersons(res));\r\n    };\r\n\r\n    useEffect(renderContacts, []);\r\n\r\n\r\n    const filteredPeople = persons.filter(person =>\r\n        person?.name?.toLowerCase().trim().includes(searchVal.toLowerCase().trim())\r\n    );\r\n\r\n    const addPerson = event => {\r\n        event.preventDefault();\r\n        // if (!(newName && newNumber)) return;\r\n        // let newPersonObj = { name: newName, number: newNumber };\r\n        // let sameName = persons.find(person => person.name === newName);\r\n        // if (sameName?.id) {\r\n        //     if (window.confirm(`${sameName?.name} is already added to phonebook, replace old number with new one?`))\r\n        //         updateContact(sameName?.id, newPersonObj);\r\n        // } else {\r\n        //     createNewContact(newPersonObj);\r\n        // }\r\n        let newPersonObj = { name: newName, number: newNumber };\r\n        createNewContact(newPersonObj);\r\n        setNewName('');\r\n        setNewNumber('');\r\n    };\r\n\r\n    const handleNameChange = event => {\r\n        setNewName(event.target.value);\r\n    };\r\n\r\n    const handleNumberChange = event => {\r\n        setNewNumber(event.target.value);\r\n    };\r\n\r\n    const handleFilterChange = event => {\r\n        setSearchVal(event.target.value);\r\n    };\r\n\r\n    const createNewContact = obj => {\r\n        contacts.create(obj)\r\n            .then(response => setPersons(persons.concat(response)))\r\n            .then(\r\n                () => {\r\n                    setSuccessMessage(newName + \" added!\");\r\n                    setTimeout(() => {\r\n                        setSuccessMessage('');\r\n                    }, 3000);\r\n                }\r\n            ).catch(err => {\r\n                setErrorMessage(err.response.data.error);\r\n                setTimeout(() => {\r\n                    setErrorMessage('');\r\n                }, 3000);\r\n            });\r\n    };\r\n\r\n    // const updateContact = (id, obj) => {\r\n    //     contacts\r\n    //         .update(id, obj)\r\n    //         .then(renderContacts)\r\n    //         .catch(err => {\r\n    //             setErrorMessage(`Information of ${obj.name} has already been removed from server`);\r\n    //             setTimeout(() => {\r\n    //                 setErrorMessage('');\r\n    //             }, 3000);\r\n    //         });\r\n    // };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Phonebook</h2>\r\n            {successMessage && <Notification message={successMessage} typeOfClass={'success'} />}\r\n            {errorMessage && <Notification message={errorMessage} typeOfClass={'error'} />}\r\n            <Search searchVal={searchVal} handleFilterChange={handleFilterChange} />\r\n            <AddPerson addPerson={addPerson} handleNameChange={handleNameChange} handleNumberChange={handleNumberChange} newName={newName} newNumber={newNumber} />\r\n            <h2>Numbers</h2>\r\n            <Contacts renderContacts={renderContacts} filteredPeople={filteredPeople} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}